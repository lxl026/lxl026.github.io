[{"title":"Linux学习之路0x01——什么是Linux","url":"/2018/07/12/Linux学习之路0x01——什么是Linux/","content":"\n\n*本系列文章主要记录本人学习[《鸟哥的Linux私房菜》](http://linux.vbird.org/)过程中的重点难点。之前也有学习过Linux，但都是半途而废，现在希望有所记录，有所收获，坚持不懈。*\n\n知道Linux很久了，但是稍微一问细些，如RedHat是什么、Debian是什么、Ubuntu和CentOS的区别是什么等等这些问题，都是一头雾水。本文从Unix开始，简单梳理Unix和LInux的历史过程，以及各个Linux相关概念，主要理清Unix、Linux、GNU的关系以及区分Linux kernel与Linux Distributions。\n\n## Unix与Linux的历史\n\n- 1969年以前，Bell、MIT、GE合作开发“Multics”系统\n- 1969年，Bell实验室退出合作计划，Bell的Ken Thompson 用汇编语言写出了Unix原型Unics\n- 1973年，Ritchie等人用C语言写成第一个正式的Unix核心\n- 1977年，BSD诞生：Berkeley大学的Bill Joy在Unix的核心代码上着手修改，命名为Berkeley Software Distribution\n- 1979年，Unix的第七版System V可以支持x86架构，Unix版权被AT&T收回\n- 1984年，Andrew Tanebaum（谭宁邦）开始开发Minix，1987年发布；Richard Mathew Stallman发起GNU计划\n- 1988年前后，Linus Torvalds不满于Minix，开始用GNU计划中的bash工作环境软件和gcc编译器撰写操作系统核心\n- 1991年,Linus Torvalds初次释出Linux核心 0.02，参考POSIX规范，相容于Unix\n- 1994年，在虚拟团队的共同努力下，Linus发表Linux正式核心1.0\n...\n\n## Linux Distributions\n\n从前面的历史中可以看到，Linus基于GNU计划开发出Linux**核心**与核心工具。\n而Linux Distribution则是kernel+Softwares+Tools，各个Distribution需遵循Linux Standard Base（LSB）、Filesystem Hierarchy Standard（FHS）等标准规范。\nDistributions主要分为两大系统，一种是使用RPM（Red-Hat Package Manager）方式安装软件的系统，另一种是使用DPKG（Debian Packager）方式安装软件的系统\n|   | RPM  | DPKG  | others  |\n| ------------ | ------------ | ------------ | ------------ |\n| 商业公司  | RHEL（Red Hat公司）SusE  | Ubuntu  |   |\n| 社群单位  | Fedoras CentOS openSuSE  |  Debian B2D | Gentoo  |\n\n商业公司一般依靠后续支持与维护获得收益。\nCentOS：由社群支持的包，旨在100%地与Red Hat Linux企业版兼容，但不包含Red Hat的商业软件。\nUbuntu：知名Linux发行版之一，由Canonical有限公司赞助，基于Debian，使用自己的软件包库，与Debian的有所不同，旨在开发出更加友好的桌面。\nGentoo：这个包采用自己独特的Portage包管理系统，吸引了许多狂热爱好者以及专业人士，由于能自己编译及调整源码依赖等选项，而获得至高的自定义性及优化的软件，在源码包也有相当多新旧版本的选择，是个强调能自由选择的发行版。\n\n\n\n\n\n","tags":["Linux"]},{"title":"Linux学习之路0x00——计算机概论","url":"/2018/07/12/Linux学习之路0x00——计算机概论/","content":"\n*本系列文章主要记录本人学习[《鸟哥的Linux私房菜》](http://linux.vbird.org/)过程中的重点难点。之前也有学习过Linux，但都是半途而废，现在希望有所记录，有所收获，坚持不懈。*\n\n# 计算机概论\n\n本文章对应[《鸟哥的Linux私房菜》](http://linux.vbird.org/)的第零章《计算机概论》。这一章的内容，实际上在《计算机组成原理》课程中已经学过了，但很容易忘记，所以就将重点做个简单的记录，重点在于那些重要的，易忘的，不做完全的记录。\n\n## 计算机的硬件组成的5个部件\n\n- 输入\n- 输出\n- 控制单元\n- 运算单元\n- 存储\n\n## CPU架构与相关设备原件\n\n- 北桥： 负责链接速度较快的CPU、内存和显卡等原件，现一般整合在CPU中\n- 南桥： 负责链接速度较慢的设备接口，如硬盘、USB、网卡等\n- 内存： DRAM（SDRAM、DDR）\n- CPU高速缓存：　SRAM\n- 固件(firmware)： 如BIOS程序写在固件中，掉电保持。\n- 磁盘\n\t- 磁头（head）\n\t- 磁道（track）\n\t- 柱面（cylinder）\n\t- 扇区（sector）\n\t- 圆盘（platter）\n\t- 缓存\n\t- 接口 SATA、SAS、USB\n- 设备IO与IRQ中断信道\n\n## 操作系统\n操作系统是用户和计算机的接口，同时也是计算机硬件和其他软件的接口。\n核心功能：\n- 系统调用接口\n- 程序管理\n- 内存管理\n- 文件系统管理\n- 设备驱动（操作系统提供接口，厂商提供驱动程序）\n\n\n\n","tags":["Linux"]},{"title":"使用hexo部署GitHub博客过程记录","url":"/2018/07/12/使用hexo部署GitHub博客过程记录/","content":"关于利用hexo搭建、部署GitHub博客网站，[Hexo官网](https://hexo.io/ \"Hexo官网\")以及其他教程给出了详细的教程，所以这里只记录我自己的一个过程。\n\n1. 安装[Node.js](http://nodejs.org/en/download/)\n2. 安装Hexo并初始化\n\t```  bash\n\tnpm install -g hexo-cli \n\thexo init  # 在目标目录即博客目录下运行\n\tnpm install hexo-deployer-git --save # 安装hexo-git插件\n\t```\n3. 安装[Git](https://git-scm.com/download/win)，并在[Github](https://github.com/)添加SSH公钥\n4. 建立Github个人仓库，仓库名为`$username$.github.io`\n5. 链接hexo与GitHub博客仓库\n\t修改_config.yml文件\n\t```\ndeploy:\n \ttype: git\n \trepository: git@github.com:$yourusername$/$yourusername$.github.io.git\n \tbranch: master\n\n\t```\n\t**注意\":\"后面需要空格隔开，否则无法识别关键字，导致链接失败！**\n6. 绑定域名\n\t如果有自己的域名可以将其与GitHub博客绑定，从而通过你的域名而不是`$yourusername$.github.io`访问博客\n\t- 添加A记录，记录值为192.30.252.153\n\t- 添加CNAME记录，记录值为`$yourusername$.github.io`\n\t- 在Github博客仓库中的Setting中修改Custom domain为你的域名\n\t- 进入本地博客目录下的source，创建文本文件CNAME，无文件后缀`.txt`,并把你的域名写入文本文件中\n7. 更换主题\n\t- 在hexo的[Themes](https://hexo.io/themes/)中挑选喜欢的主题，并clone到本地目录的theme目录下\n\t- 将_config.yml中的`theme`关键字的值改为新主题的文件夹名称\n8. 部署到GitHub博客上\n\t```\n\thexo g # 生成静态网页文件\n\thexo d # 部署到Github\n\t```\n\t以上代码可以等价于`hexo d -g`或`hexo g -d` 在每一次修改后都可以执行这些指令，同步到GitHub博客上\n9. 其他常用命令\n\t```\n\thexo new [layout] <title> # 在本地/sourece/_post目录下生成md文件，该文件对应一篇博客文章页面\n\thexo s # 启动服务器。默认情况下，访问网址为： http://localhost:4000/\n\t```\n\t更多命令与使用可查看[官网教程](https://hexo.io/zh-cn/docs/)\n","tags":["miscellaneous"]},{"title":"Hello World","url":"/2018/07/10/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n"}]